user  nginx root;
worker_processes  auto;

pid /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    error_log     /var/log/nginx/error.log error;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    access_log on;
    log_not_found off;
    log_subrequest off;
    rewrite_log off;
    #resolver 127.0.0.11;
    sendfile on;

    #timeout zone
    keepalive_timeout  65;
    client_body_timeout 11;
    client_header_timeout 12;
    proxy_read_timeout 13;
    send_timeout 14;
    fastcgi_read_timeout 6000s;
    fastcgi_connect_timeout 10s;
    client_max_body_size 100m;
    client_body_buffer_size 1m;
    tcp_nopush     on;

    upstream fastcgi_backend {
        server app:9000;
    }

    server {
        listen 8080;
        location /nginx_status {
            access_log  off;
            stub_status on;
        }
        location = /fpm_status {
            access_log off;
            include fastcgi_params;
            fastcgi_pass fastcgi_backend;
        }
        location = /fpm_ping {
            access_log off;
            include fastcgi_params;
            fastcgi_pass fastcgi_backend;
        }
    }

    server {
         # Enable QUIC and HTTP/3.
         #listen 443 quic reuseport;
         # Enable HTTP/2 (optional).
         listen 443 ssl http2;
         listen 80;

         server_name magento.test;
         set $MAGE_ROOT /var/www/magento2ce;
         set $MAGE_DEBUG_SHOW_ARGS 0;

         ssl_certificate /etc/nginx/server.crt;
         ssl_certificate_key /etc/nginx/server.key;
         # Enable all TLS versions (TLSv1.3 is required for QUIC).
         ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
         # Add Alt-Svc header to negotiate HTTP/3.
         #add_header alt-svc 'h3-23=":443"; ma=86400';

         root $MAGE_ROOT/pub;

         index index.php;
         autoindex off;
         charset UTF-8;

         proxy_buffering off;

         client_max_body_size 128m;
         client_body_buffer_size 32m;
         client_body_temp_path /tmp 1 2;

         client_header_buffer_size 128k;
         large_client_header_buffers 4 128k;

         error_page 404 403 = /errors/404.php;
         #add_header "X-UA-Compatible" "IE=Edge";


         # Deny access to sensitive files
         location /.user.ini {
             deny all;
         }

         # PHP entry point for setup application
         location ~* ^/setup($|/) {
             root $MAGE_ROOT;
             location ~ ^/setup/index.php {
                 fastcgi_pass   fastcgi_backend;

                 fastcgi_param  PHP_FLAG  "session.auto_start=off \n suhosin.session.cryptua=off";
                 fastcgi_param  PHP_VALUE "memory_limit=756M \n max_execution_time=600";
                 fastcgi_read_timeout 600s;
                 fastcgi_connect_timeout 600s;

                 fastcgi_index  index.php;
                 fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
                 include        fastcgi_params;
             }

             location ~ ^/setup/(?!pub/). {
                 deny all;
             }

             location ~ ^/setup/pub/ {
                 add_header X-Frame-Options "SAMEORIGIN";
             }
         }

         # PHP entry point for update application
         location ~* ^/update($|/) {
             root $MAGE_ROOT;

             location ~ ^/update/index.php {
                 fastcgi_split_path_info ^(/update/index.php)(/.+)$;
                 fastcgi_pass   fastcgi_backend;
                 fastcgi_index  index.php;
                 fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
                 fastcgi_param  PATH_INFO        $fastcgi_path_info;
                 include        fastcgi_params;
             }

             # Deny everything but index.php
             location ~ ^/update/(?!pub/). {
                 deny all;
             }

             location ~ ^/update/pub/ {
                 add_header X-Frame-Options "SAMEORIGIN";
             }
         }

         location / {
             try_files $uri $uri/ /index.php$is_args$args;
         }

         location /pub/ {
             location ~ ^/pub/media/(downloadable|customer|import|custom_options|theme_customization/.*\.xml) {
                 deny all;
             }
             alias $MAGE_ROOT/pub/;
             add_header X-Frame-Options "SAMEORIGIN";
         }

         location /static/ {
             # Uncomment the following line in production mode
             # expires max;

             # Remove signature of the static files that is used to overcome the browser cache
             location ~ ^/static/version\d*/ {
                 rewrite ^/static/version\d*/(.*)$ /static/$1 last;
             }

             location ~* \.(ico|jpg|jpeg|png|gif|svg|svgz|webp|avif|avifs|js|css|eot|ttf|otf|woff|woff2|html|json|webmanifest)$ {
                 add_header Cache-Control "public";
                 add_header X-Frame-Options "SAMEORIGIN";
                 expires +1y;

                 if (!-f $request_filename) {
                     rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
                 }
             }
             location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
                 add_header Cache-Control "no-store";
                 add_header X-Frame-Options "SAMEORIGIN";
                 expires    off;

                 if (!-f $request_filename) {
                    rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
                 }
             }
             if (!-f $request_filename) {
                 rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
             }
             add_header X-Frame-Options "SAMEORIGIN";
         }

         location /media/ {

         ## The following section allows to offload image resizing from Magento instance to the Nginx.
         ## Catalog image URL format should be set accordingly.
         ## See https://docs.magento.com/user-guide/configuration/general/web.html#url-options
         #   location ~* ^/media/catalog/.* {
         #
         #       # Replace placeholders and uncomment the line below to serve product images from public S3
         #       # See examples of S3 authentication at https://github.com/anomalizer/ngx_aws_auth
         #       # resolver 8.8.8.8;
         #       # proxy_pass https://<bucket-name>.<region-name>.amazonaws.com;
         #
         #       set $width "-";
         #       set $height "-";
         #       if ($arg_width != '') {
         #           set $width $arg_width;
         #       }
         #       if ($arg_height != '') {
         #           set $height $arg_height;
         #       }
         #       image_filter resize $width $height;
         #       image_filter_jpeg_quality 90;
         #   }

             try_files $uri $uri/ /get.php$is_args$args;

             location ~ ^/media/theme_customization/.*\.xml {
                 deny all;
             }

             location ~* \.(ico|jpg|jpeg|png|gif|svg|svgz|webp|avif|avifs|js|css|eot|ttf|otf|woff|woff2)$ {
                 add_header Cache-Control "public";
                 add_header X-Frame-Options "SAMEORIGIN";
                 expires +1y;
                 try_files $uri $uri/ /get.php$is_args$args;
             }
             location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
                 add_header Cache-Control "no-store";
                 add_header X-Frame-Options "SAMEORIGIN";
                 expires    off;
                 try_files $uri $uri/ /get.php$is_args$args;
             }
             add_header X-Frame-Options "SAMEORIGIN";
         }

         location /media/customer/ {
             deny all;
         }

         location /media/downloadable/ {
             deny all;
         }

         location /media/import/ {
             deny all;
         }

         location /media/custom_options/ {
             deny all;
         }

         location /errors/ {
             location ~* \.xml$ {
                 deny all;
             }
         }

         # PHP entry point for main application
         location ~ ^/(index|get|static|errors/report|errors/404|errors/503|health_check)\.php$ {
             try_files $uri =404;
             fastcgi_pass   fastcgi_backend;
             fastcgi_buffers 16 256k;
             fastcgi_buffer_size 256k;

             proxy_buffers 4 512k;
             proxy_buffer_size 256k;
             proxy_busy_buffers_size 512k;

             fastcgi_param  PHP_FLAG  "session.auto_start=off \n suhosin.session.cryptua=off";
             fastcgi_param  PHP_VALUE "memory_limit=756M \n max_execution_time=18000";
             fastcgi_read_timeout 600s;
             fastcgi_connect_timeout 600s;

             fastcgi_index  index.php;
             fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
             include        fastcgi_params;
         }

        # Config section for mftf tests CLI commands
         location ~* ^/dev/tests/acceptance/utils($|/) {
           root $MAGE_ROOT;
           location ~ ^/dev/tests/acceptance/utils/command.php {
               fastcgi_pass   fastcgi_backend;
               fastcgi_index  index.php;
               fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
               include        fastcgi_params;
           }
         }

         #location /graphql {
          #   proxy_set_header Host $http_host;
          #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

#             proxy_pass http://app:9501/graphql;
 #        }

         gzip on;
         gzip_disable "msie6";

         gzip_comp_level 6;
         gzip_min_length 1100;
         gzip_buffers 16 8k;
         gzip_proxied any;
         gzip_types
             text/plain
             text/css
             text/js
             text/xml
             text/javascript
             application/javascript
             application/x-javascript
             application/json
             application/xml
             application/xml+rss
             image/svg+xml;
         gzip_vary on;
    }
}
